{
  "name": "Buy-Sell",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=# Você é um gerente de operações, que deve interpretar a entrada do usuário e delegar qual ferramenta será usada para fazer o que o usuário solicitou. Você pode comprar e vender ações em nome dos usuários.\n# Você deve usar o tool do telegram para exigir a confirmação do usuário para comprar ou vender ações.\n# SEMPRE chame a ferramenda de confirmação do Telegram.\n# O id do usuário virá a partir do orquestrador, não pergunte, em hipótese alguma, as credenciais do usuário. \n# Exemplo: Comprar (chamar ferramenta de compra) > perguntar a quantidade e sempre informar o preço > usar a ferramenta do Telegram para pedir confirmação\n# Exemplo: Vender (chamar ferramenta de venda) > mostrar ações do usuário > perguntar o nome da ação e a quantidade > usar a ferramenta do Telegram para pedir confirmação.\nSempre mostre o valor e o ticker da ação. E SEMPRE confirme a ação com o cliente. \n\nDados do usuário:\nDados do usuário:\n[\n{\n\"nome\": {{ $json.nome }},\n\"valor_conta\": {{ $json.saldo }},\n\"id\": {{ $json.ID }}\n\"sessionID\": {{ $json.sessionID }}\n}\n]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        208,
        0
      ],
      "id": "c266b1f9-e436-46a1-bf2e-8d524f872273",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        80,
        272
      ],
      "id": "b556e8e4-1e1c-43ac-bc15-64e162e8e4e4",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "idmpDg7SRgYSVKdz",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "# Essa tool deve mandar uma mensagem no telegram, em forma de inline keyboard, exigindo uma resposta de sim ou não. Em caso positivo completa a compra ou venda, em caso negativo, não completa a compra ou venda. \n# Deve ser chamada sempre que o usuário irá confirma compra ou venda.  ",
        "chatId": "={{ $json.sessionID }}",
        "text": "=Gostaria de confirmar está ação?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Sim",
                    "additionalFields": {
                      "callback_data": "answer=sim"
                    }
                  },
                  {
                    "text": "Não",
                    "additionalFields": {
                      "callback_data": "answer=nao"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        448,
        272
      ],
      "id": "4bb7ba77-9fb8-4828-b8f0-516d4753555d",
      "name": "Confirmation tool ",
      "webhookId": "096acd9d-a4b0-42b3-b138-e06e120eec7d",
      "credentials": {
        "telegramApi": {
          "id": "X75XaG4OFZpmWx6J",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "# Use essa tool para buscar os ativos que o usuário que está enviando mensagem tem, junto com a quantidade de cada um. \n# Mostre apenas os primeiros ativos/ações que o usuário possui, caso ele pergunte exiba mais 5, ou peça o nome da ação para ele. \n# Use o tool de confirmation tool para confirmar a venda definitiva do ativo. \n# Exemplo: Vender (chamar ferramenta de venda) > mostrar ações do usuário > perguntar o nome da ação e a quantidade > usar a ferramenta do Telegram para pedir confirmação",
        "operation": "getAll",
        "tableId": "usuarios_has_ativos",
        "limit": 12,
        "filters": {
          "conditions": [
            {
              "keyName": "usuarios_id",
              "condition": "eq",
              "keyValue": "={{ $json.ID }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        320,
        272
      ],
      "id": "3feee9db-a250-4c5b-9f7b-12e47e6bd18a",
      "name": "Sell tool",
      "credentials": {
        "supabaseApi": {
          "id": "3nFygEl4rSeOYghY",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "# Tool utilizado para comprar ações. \n# Toda compra deve receber uma confirmação, que sera feita a partir do confirmation tool. \n# Exemplo: Comprar (chamar ferramenta de compra) > perguntar a quantidade e informar o preço > usar a confirmation tool para aprovar toda e qualquer compra ",
        "operation": "getAll",
        "tableId": "ativos",
        "limit": 10
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        592,
        256
      ],
      "id": "4a57e57f-e59d-47d4-9778-14f31bc22c11",
      "name": "Buy tool",
      "credentials": {
        "supabaseApi": {
          "id": "3nFygEl4rSeOYghY",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "ID"
            },
            {
              "name": "sessionID",
              "type": "number"
            },
            {
              "name": "nome"
            },
            {
              "name": "saldo",
              "type": "number"
            },
            {
              "name": "chatInput"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "2506ef53-9225-4b52-baaa-ab0ee2319434",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionID }}",
        "contextWindowLength": 1
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        208,
        272
      ],
      "id": "be6a83e6-e72e-40f2-beeb-695b25a06019",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "7datjMwdaujOgRj7",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Confirmation tool ": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Sell tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buy tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9e656da4-c2d6-42db-9a48-7fd7713024b6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "90ce3e81f073b12deb3c51e175b2fbeb786965b8a6b9bee3f8075269ca10ec09"
  },
  "id": "sOzur855cBX8IzET",
  "tags": []
}